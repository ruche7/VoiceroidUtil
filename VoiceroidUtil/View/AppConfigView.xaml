<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:ru="http://schemas.ruche-home.net/xaml/windows/mvvm"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:VoiceroidUtil"
    xmlns:v="clr-namespace:VoiceroidUtil.View"
    xmlns:vm="clr-namespace:VoiceroidUtil.ViewModel"
    x:Class="VoiceroidUtil.View.AppConfigView"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance
        Type={x:Type vm:AppConfigViewModel},
        IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/CommonStyles.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/Converters.xaml" />
                <ResourceDictionary>
                    <ObjectDataProvider
                        x:Key="fileNameFormats"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:FileNameFormat" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                Content="保存先(_D)..."
                Command="{Binding SelectSaveDirectoryCommand}"
                Grid.Column="0" />
            <tk:AutoSelectTextBox
                Text="{Binding Value.SaveDirectoryPath}"
                IsEnabled="{Binding CanModify}"
                IsReadOnly="True"
                IsReadOnlyCaretVisible="True"
                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                Margin="2,0,0,0"
                VerticalContentAlignment="Center"
                AutoSelectBehavior="{x:Static tk:AutoSelectBehavior.OnFocus}"
                Grid.Column="1">
                <i:Interaction.Behaviors>
                    <ru:DragDropCommandBehavior
                        PreviewDragOverCommand="{Binding DragOverSaveDirectoryCommand}"
                        DropCommand="{Binding DropSaveDirectoryCommand}" />
                </i:Interaction.Behaviors>
            </tk:AutoSelectTextBox>
            <Button
                Command="{Binding OpenSaveDirectoryCommand}"
                ToolTip="保存先フォルダーを開く (Ctrl+E)"
                Margin="1,0,0,0"
                Padding="3,0"
                Grid.Column="2">
                <Image Source="/VoiceroidUtil;component/resources/icon/open.png" />
            </Button>
        </Grid>
        <StackPanel IsEnabled="{Binding CanModify}" Margin="0,4,0,0">
            <DockPanel>
                <Label
                    Content="ファイル命名(_F):"
                    Target="{Binding ElementName=Setting_FileName}"
                    DockPanel.Dock="Left" />
                <ComboBox
                    x:Name="Setting_FileName"
                    ItemsSource="{Binding Source={StaticResource fileNameFormats}}"
                    SelectedItem="{Binding Value.FileNameFormat}"
                    Margin="4,0,0,0">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding
                                    Converter={StaticResource enumDisplayConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </DockPanel>
            <CheckBox
                x:Name="Setting_ForceText"
                Content="テキストファイルを必ず作成(_T)"
                IsChecked="{Binding Value.IsTextFileForceMaking}"
                Margin="0,4,0,0" />
            <CheckBox
                Content="文字コード UTF-8 で作成(_U)"
                IsChecked="{Binding Value.IsTextFileUtf8}"
                IsEnabled="{Binding IsChecked, ElementName=Setting_ForceText}"
                Margin="20,4,0,0" />
            <GroupBox Header="保存後処理" Margin="0,4,0,0">
                <StackPanel Orientation="Vertical" Margin="4">
                    <CheckBox
                        x:Name="Setting_ToYmm"
                        Content="ゆっくりMovieMaker3にファイルパス設定(_Y)"
                        IsChecked="{Binding Value.IsSavedFileToYmm}" />
                    <Label
                        Content="※カスタムボイス機能は働きません。"
                        FontSize="11"
                        Margin="20,0,0,0" />
                    <StackPanel
                        IsEnabled="{Binding IsChecked, ElementName=Setting_ToYmm}"
                        Margin="20,4,0,0">
                        <CheckBox
                            x:Name="Setting_YmmChara"
                            Content="キャラクターを自動選択(_N)"
                            IsChecked="{Binding Value.IsYmmCharaSelecting}"
                            IsEnabled="{Binding IsChecked, ElementName=Setting_ToYmm}" />
                        <v:YmmCharaRelationsControl
                            DataContext="{Binding Value.YmmCharaRelations}"
                            IsEnabled="{Binding IsChecked, ElementName=Setting_YmmChara}"
                            Margin="24,2,0,0" />
                        <CheckBox
                            Content="追加ボタンを自動で押す(_B)"
                            IsChecked="{Binding Value.IsYmmAddButtonClicking}"
                            Margin="0,4,0,0" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </StackPanel>
</UserControl>
