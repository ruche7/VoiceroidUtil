<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:aviutl="http://schemas.ruche-home.net/xaml/aviutl"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:VoiceroidUtil"
    xmlns:vm="clr-namespace:VoiceroidUtil.ViewModel"
    x:Class="VoiceroidUtil.View.MovableValueMoveModeControl"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance vm:MovableValueViewModel, IsDesignTimeCreatable=True}"
    UseLayoutRounding="True"
    TextOptions.TextFormattingMode="Display"
    TextOptions.TextRenderingMode="ClearType">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/CommonBrushes.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/CommonStyles.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/Converters.xaml" />
                <ResourceDictionary>
                    <ObjectDataProvider
                        x:Key="moveModes"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="aviutl:MoveMode" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <DockPanel>
            <Label
                Content="移動モード(_M):"
                Target="{Binding ElementName=MovableValue_MoveMode}"
                DockPanel.Dock="Left" />
            <ComboBox
                x:Name="MovableValue_MoveMode"
                ItemsSource="{Binding Source={StaticResource moveModes}}"
                SelectedItem="{Binding MoveMode.Value}"
                Margin="4,0,0,0">
                <ComboBox.Resources>
                    <Style TargetType="ComboBoxItem">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding
                                    Path=Color,
                                    Source={StaticResource windowBrush}}"
                                Value="Black">
                                <Setter
                                    Property="Foreground"
                                    Value="{StaticResource windowTextBrush}" />
                                <Setter
                                    Property="Background"
                                    Value="{StaticResource windowBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Resources>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                            Text="{Binding
                                Converter={StaticResource enumDisplayConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DockPanel>
        <StackPanel
            Orientation="Horizontal"
            IsEnabled="{Binding CanAccelerate.Value}"
            Margin="0,4,0,0">
            <CheckBox Content="加速(_A)" IsChecked="{Binding IsAccelerating.Value}" />
            <CheckBox
                Content="減速(_D)"
                IsChecked="{Binding IsDecelerating.Value}"
                Margin="12,0,0,0" />
        </StackPanel>
        <DockPanel IsEnabled="{Binding HasInterval.Value}" Margin="0,4,0,0">
            <Label
                Content="移動フレーム間隔(_I):"
                Target="{Binding ElementName=MovableValue_Interval}"
                DockPanel.Dock="Left" />
            <Label Content="フレーム" DockPanel.Dock="Right" />
            <tk:IntegerUpDown
                x:Name="MovableValue_Interval"
                Value="{Binding Interval.Value, UpdateSourceTrigger=PropertyChanged}"
                MinWidth="72"
                MaxWidth="160"
                Margin="4,0,2,0" />
        </DockPanel>
    </StackPanel>
</UserControl>
